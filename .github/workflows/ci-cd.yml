name: CloudSim CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    
    - name: Show directory structure
      run: find . -type f -name "pom.xml" | sort
      
    - name: Maven version
      run: mvn --version
    
    - name: Build with Maven (debug mode)
      run: mvn -B -e clean package
      continue-on-error: true
    
    - name: Build modules separately
      run: |
        echo "Building CloudSim core..."
        cd modules/cloudsim
        mvn -B -e clean install
        
        echo "Building CloudSim examples..."
        cd ../cloudsim-examples
        mvn -B -e clean install
    
    - name: Run tests
      run: mvn -B test
      continue-on-error: true
    
    - name: Check JAR files
      run: |
        echo "Checking for JAR files..."
        find . -name "*.jar" | sort
      
    - name: Run AutoScalingExample (simplified)
      run: |
        cd modules/cloudsim-examples
        echo "Checking executable JAR file..."
        ls -la target
        echo "Running example if possible..."
        if [ -f "target/cloudsim-examples-7.0.0-alpha.jar" ]; then
          java -cp target/cloudsim-examples-7.0.0-alpha.jar:../cloudsim/target/cloudsim-7.0.0-alpha.jar org.cloudbus.cloudsim.examples.AutoScalingExample
        else
          echo "JAR file not found, skipping execution"
          exit 0
        fi
      continue-on-error: true
      
  release:
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
        
    - name: Build JAR files
      run: |
        echo "Building all modules..."
        mvn -B -e clean package
        echo "Verifying JAR files exist..."
        find . -name "*.jar" | sort
      
    - name: Create Release Folder
      run: mkdir -p release
      
    - name: Copy Files to Release Folder
      run: |
        echo "Trying to copy CloudSim examples JAR..."
        if [ -f "modules/cloudsim-examples/target/cloudsim-examples-7.0.0-alpha.jar" ]; then
          cp modules/cloudsim-examples/target/cloudsim-examples-7.0.0-alpha.jar release/
        else
          echo "Examples JAR not found"
        fi
        
        echo "Trying to copy CloudSim core JAR..."
        if [ -f "modules/cloudsim/target/cloudsim-7.0.0-alpha.jar" ]; then
          cp modules/cloudsim/target/cloudsim-7.0.0-alpha.jar release/
        else
          echo "Core JAR not found"
        fi
      
    - name: List Release Files
      run: ls -la release/
      
    - name: Check if files exist for release
      id: check_files
      run: |
        if [ "$(ls -A release/)" ]; then
          echo "::set-output name=files_exist::true"
        else
          echo "::set-output name=files_exist::false"
        fi
      
    - name: Create GitHub Release
      id: create_release
      if: steps.check_files.outputs.files_exist == 'true'
      uses: softprops/action-gh-release@v1
      with:
        files: release/*
        name: Release ${{ github.run_number }}
        tag_name: v${{ github.run_number }}
        body: |
          CloudSim Release ${{ github.run_number }}
          
          Contains:
          - CloudSim Core
          - CloudSim Examples with Auto-Scaling support
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 