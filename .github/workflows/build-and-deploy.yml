name: Build, Test, and Deploy CloudSim

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  fix-pom-files:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Fix POM files
      run: |
        # Fix main pom.xml
        sed -i 's/<n>cloudsim-package<\/n>/<n>cloudsim-package<\/name>/g' pom.xml
        
        # Fix module pom files
        sed -i 's/<n>cloudsim<\/n>/<n>cloudsim<\/name>/g' modules/cloudsim/pom.xml
        sed -i 's/<n>cloudsim-examples<\/n>/<n>cloudsim-examples<\/name>/g' modules/cloudsim-examples/pom.xml
        
        echo "Fixed POM files:"
        grep -n "<n>" pom.xml || echo "Name tag not found in root pom.xml"
        grep -n "<n>" modules/cloudsim/pom.xml || echo "Name tag not found in cloudsim module pom.xml"
        grep -n "<n>" modules/cloudsim-examples/pom.xml || echo "Name tag not found in cloudsim-examples module pom.xml"
    
    - name: Upload fixed code
      uses: actions/upload-artifact@v4
      with:
        name: fixed-code
        path: |
          pom.xml
          modules/cloudsim/pom.xml
          modules/cloudsim-examples/pom.xml
  
  build:
    needs: fix-pom-files
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download fixed code
      uses: actions/download-artifact@v4
      with:
        name: fixed-code
    
    - name: Set up JDK 16
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 16
        cache: maven
    
    - name: Build with Maven
      run: mvn -B clean package
    
    - name: Run tests
      run: mvn -B test
    
    - name: Check JAR files
      run: |
        echo "Checking for JAR files..."
        find . -name "*.jar" | sort
    
    - name: Run AutoScalingExample
      run: |
        echo "Running AutoScalingExample..."
        java -cp "modules/cloudsim/target/cloudsim-7.0.0-alpha.jar:modules/cloudsim-examples/target/cloudsim-examples-7.0.0-alpha.jar" org.cloudbus.cloudsim.examples.AutoScalingExample
    
    - name: Upload JAR files
      uses: actions/upload-artifact@v4
      with:
        name: jar-files
        path: |
          modules/cloudsim/target/cloudsim-7.0.0-alpha.jar
          modules/cloudsim-examples/target/cloudsim-examples-7.0.0-alpha.jar

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download fixed code
      uses: actions/download-artifact@v4
      with:
        name: fixed-code
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/cloudsim
        tags: |
          type=semver,pattern={{version}}
          type=ref,event=branch
          type=sha,format=short
          latest
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release:
    needs: [build, docker]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
    - name: Download JAR files
      uses: actions/download-artifact@v4
      with:
        name: jar-files
        path: release
    
    - name: List release files
      run: ls -la release/
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: release/*
        name: Release ${{ github.run_number }}
        tag_name: v${{ github.run_number }}
        body: |
          CloudSim Release ${{ github.run_number }}
          
          Contains:
          - CloudSim Core
          - CloudSim Examples with Auto-Scaling support
          - Docker image: ghcr.io/${{ github.repository_owner }}/cloudsim:latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 